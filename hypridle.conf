# /* ---- ðŸ’« https://github.com/JaKooLit ðŸ’« ---- */  #
# Hypridle
# Original config submitted by https://github.com/SherLock707


general {
    #lock_cmd = pidof hyprlock || hyprlock # runs hyprlock if it is not already running (this is always run when "loginctl lock-session" is called)
    #lock_cmd = pidof swaylock || swaylock -i ~/Pcitures/1.png # runs hyprlock if it is not already running (this is always run when "loginctl lock-session" is called)
    lock_cmd = pidof swaylock || swaylock --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-blur 7x5 --effect-vignette 0.5:0.5 --ring-color bb00cc --key-hl-color 880033 --line-color 00000000 --inside-color 00000088 --separator-color 00000000 --grace 2 --fade-in 0.2

    # unlock_cmd = killall hyprlock # kills hyprlock when unlocking (this is always run when "loginctl unlock-session" is called)
    before_sleep_cmd = loginctl lock-session    # ensures that the session is locked before going to sleep
    after_sleep_cmd = hyprctl dispatch dpms off # turn of screen after sleep (not strictly necessary, but just in case)
    ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
}

# turn off screen faster if session is already locked
# (disabled by default)
 listener {
     timeout = 10                            # 30 seconds
     on-timeout = pidof swaylock && hyprctl dispatch dpms off # turns off the screen if hyprlock is active
     on-resume = pidof swaylock && hyprctl dispatch dpms on    # command to run when activity is detected after timeout has fired.
 }

# Warn
listener {
    timeout = 540                            # 9 min
    #on-timeout = notify-send "You are idle!" # command to run when timeout has passed
    #on-resume = notify-send "Welcome back!"  # command to run when activity is detected after timeout has fired.
}

# Screenlock
listener {
    #timeout = 600                     # 10 min
    timeout = 300                     # 5 min
    on-timeout = loginctl lock-session # command to run when timeout has passed
    # on-resume = notify-send "Welcome back to your desktop!"  # command to run when activity is detected after timeout has fired.
}

# Turn off screen
# (disabled by default)
 listener {
     timeout = 310                            # 5 min 10s
     on-timeout = hyprctl dispatch dpms off  # command to run when timeout has passed
     on-resume = hyprctl dispatch dpms on    # command to run when activity is detected after timeout has fired.
 }

# Suspend # disabled by default
# listener {
   # timeout = 1200                            # 20 min
   # on-timeout = systemctl suspend # command to run when timeout has passed
    # on-resume = notify-send "Welcome back to your desktop!"  # command to run when activity is detected after timeout has fired.
# }
